// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.Database;

#nullable disable

namespace University.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240103183939_University")]
    partial class University
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University.Database.Entities.Career", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("codigo_carrera");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("creado_tmstp")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("facultad_id");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actualizado_tmstp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_carrera");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("carrera", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EF",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacultyId = 1,
                            Name = "Escuela de Física",
                            State = true
                        },
                        new
                        {
                            Id = 2,
                            Code = "EM",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacultyId = 1,
                            Name = "Escuela de Matemática",
                            State = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "EA",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacultyId = 2,
                            Name = "Escuela de Arquitectura",
                            State = true
                        });
                });

            modelBuilder.Entity("University.Database.Entities.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("codigo_facultad");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("creado_tmstp")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actualizado_tmstp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_facultad");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("facultad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FC",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Facultad de Ciencias",
                            State = true
                        },
                        new
                        {
                            Id = 2,
                            Code = "FAUA",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Facultad de Arquitectura",
                            State = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "FIC",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Facultad de Ingenieria Civil",
                            State = true
                        },
                        new
                        {
                            Id = 4,
                            Code = "FIM",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Facultad de Ingenieria Mecánica",
                            State = true
                        });
                });

            modelBuilder.Entity("University.Database.Entities.Career", b =>
                {
                    b.HasOne("University.Database.Entities.Faculty", "Faculty")
                        .WithMany("Careers")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("University.Database.Entities.Faculty", b =>
                {
                    b.Navigation("Careers");
                });
#pragma warning restore 612, 618
        }
    }
}
